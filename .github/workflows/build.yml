# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build and deploy pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PRESET: CI

jobs:
  docker_build_and_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: dorny/paths-filter@v3.0.0
        id: filter
        with:
          filters: |
            docker:
              - 'docker/**'
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push the image
        if: steps.filter.outputs.docker == 'true'
        run: |
          cd ${{github.workspace}}/docker
          ./build.sh
  docker_deps_build_and_publish:
    needs: docker_build_and_publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: dorny/paths-filter@v3.0.0
        id: filter
        with:
          filters: |
            external:
              - 'docker/**'
              - 'external/**'
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push the image
        if: steps.filter.outputs.external == 'true'
        run: |
          cd ${{github.workspace}}/docker
          ./build_deps.sh
  build:
    needs: docker_deps_build_and_publish
    # TODO: use the docker image published at the step over
    runs-on: ubuntu-latest
    permissions: read-all
    container:
      image: ghcr.io/olympus-robotics/x86_64/hephaestus-dev_deps:latest
      credentials:
        username: ${{ github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build --preset CI
    - name: Check format
      run: cd ${{github.workspace}}/build && ninja format
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build -- all examples

    - name: Test
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        cd ${{github.workspace}}/build
        ninja tests_build
        ninja test
